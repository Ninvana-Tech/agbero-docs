openapi: 3.0.0
info:
  title: Agbero API
  description: Agbero Testing APIs
  version: 1.0.0
servers:
  - url: http://{{api_base_url}}
  - url: http://{{base_url}}
  - url: localhost://
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Merchant
  - name: Driver
  - name: User
paths:
  /api/v1/merchant/create:
    post:
      tags:
        - Merchant
      summary: Create Merchant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: odunmilade@gmail.com
                password: whiteman@5
                name: Hody INC
                contact: '08089040350'
                address: Test Address
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/merchant/login:
    post:
      tags:
        - Merchant
      summary: Login Merchant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sinaayopopoola@gmail.com
                password: Prayer1020!
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/merchant/drivers:
    get:
      tags:
        - Merchant
      summary: Get Merchants Driver
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/merchant/users:
    get:
      tags:
        - Merchant
      summary: Get Merchants User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/merchant/trip/confirm:
    post:
      tags:
        - Merchant
      summary: Confirm Payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tripId: 67112e9c1fe929c1491c9f16
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/driver/create:
    post:
      tags:
        - Driver
      summary: Create Driver
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: odunmilad@gmail.com
                firstName: Merchant
                lastName: Driver
                license: >-
                  https://ng.jumia.is/unsafe/fit-in/300x300/filters:fill(white)/product/66/6375363/1.jpg?6069
                merchant: MBEO0FK0
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/driver/login:
    post:
      tags:
        - Driver
      summary: Login Driver
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sinaayopopoola+1@gmail.com
                password: Prayer1020!
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/driver/update/vehicle:
    put:
      tags:
        - Driver
      summary: Vehicle Information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                vehicleInfo:
                  - manufacturer: Toyota
                    year: 2023
                    plateNumber: AAA-123-423
                    color: red
                    exteriorPhoto: String
                    interiorPhoto: String
                    numberOfSeats: 10
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/driver/trip/accept/670953593a8b027bf09568d0:
    get:
      tags:
        - Driver
      summary: Driver Accept Trip
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: '{{token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/driver/trip/reject/66b7c194f03f04cb5cb78a36:
    post:
      tags:
        - Driver
      summary: Driver Reject Trip
      requestBody:
        content: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: '{{token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/driver/trip/arrive-pickup/6640a92ac082e33d250efdb4:
    get:
      tags:
        - Driver
      summary: Arrive Pick Up
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: '{{token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/driver/trip/start/6640ad0778ce8141997b09a4:
    get:
      tags:
        - Driver
      summary: Start Trip
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: '{{token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /000/api/v1/driver/trip/end/66ba175559fca47e715db007:
    post:
      tags:
        - Driver
      summary: End Trip
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tripPrice: 2000
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: '{{token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/create:
    post:
      tags:
        - User
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sinaayopopoola+9@gmail.com
                fullName: Popoola Sinaayo
                merchant: 0AH0JQ5G
                phoneNumber: '08129304063'
                profilePicture: www.google.com
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/request/trip:
    post:
      tags:
        - User
      summary: Request Trip
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sinaayopopoola+4@gmail.com
                driverId: 67095a341a3f30e36b05b00d
                requestLocation: Epe, Lagos
                originState: Lagos
                pickUpLocation:
                  latitude: 21.53
                  longitude: 62.73
                  description: A very local place again
                dropOffLocation:
                  latitude: 20.23
                  longitude: 40.23
                  description: A very local place destination
                distanceToPickup: 123
                basePrice: 100
                durationToPickup: 123
                tripDistance: 123
                tripDuration: 10
      parameters:
        - name: API_KEY
          in: query
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/update/trip/driver/{tripId}:
    put:
      tags:
        - User
      summary: Update Trip Driver
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                driverId: 6640a6f6661cd834734de86b
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
        - name: tripId
          in: path
          schema:
            type: string
          required: true
          example: 67336790bc412fcaeae3be5b
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/cancel/trip:
    post:
      tags:
        - User
      summary: Cancel Trip
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sinaayopopoola+4@gmail.com
                tripId: 670ffdd02c9ab137ee5109cd
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user:
    post:
      tags:
        - User
      summary: Get User Info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sinaayopopoola+7@gmail.com
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/trip:
    post:
      tags:
        - User
      summary: Get All User's Trip
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sinaayopopoola+4@gmail.com
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/trip/{tripId}:
    get:
      tags:
        - User
      summary: Get Single Trip
      security:
        - noauthAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 474c30df-57e3-4425-928f-18e491445886
        - name: tripId
          in: path
          schema:
            type: string
          required: true
          example: 670ffdd02c9ab137ee5109cd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
